#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#

# Packages
library(shiny)
library(shinythemes)
library(shinydashboard)
library(leaflet)
library(tidyverse)
library(plotly)
library(dplyr)
library(tidyr)
library(bs4Dash)
library(fresh)

custom_colors_theme <- create_theme(
  bs4dash_color(
    olive = "#d8bc66",
    lime = "#fcec0c",
    teal =  "#012169",
    maroon = "#58482c",
    gray_x_light = "#d1c5c0"
  )
)

sidebar <- {dashboardSidebar(
  sidebarMenu(
    menuItem("Our Ten Community Schools", tabName = "schooltab",
             menuSubItem(tabName = "home", text = "Home", icon = icon("cloud-upload")),
             menuSubItem(tabName = "CCS", text = "C.C. Spaulding", icon = icon("cloud-upload")),
             menuSubItem(tabName = "EastWay", text = "Eastway", icon = icon("cloud-upload")),
             menuSubItem(tabName = "EKPowe", text = "E.K. Powe", icon = icon("cloud-upload")),
             menuSubItem(tabName = "FayettevilleSt", text = "Fayetteville St", icon = icon("cloud-upload")),
             menuSubItem(tabName = "ForestView", text = "Forest View", icon = icon("cloud-upload")),
             menuSubItem(tabName = "Lakewood", text = "Lakewood", icon = icon("cloud-upload")),
             menuSubItem(tabName = "Parkwood", text = "Parkwood", icon = icon("cloud-upload")),
             menuSubItem(tabName = "Southeast", text = "Southeast", icon = icon("cloud-upload")),
             menuSubItem(tabName = "Hillside", text = "Hillside", icon = icon("cloud-upload")),
             menuSubItem(tabName = "Jordan", text = "C E Jordan", icon = icon("cloud-upload"))
    ),
    menuItem("School Statistics", tabName = "statstab"),
    menuItem("Maps", tabName = "mapstab")
  )
)
}
  
body <- {dashboardBody(
  tabItems(
    #Landing Page
    {tabItem(tabName = "home",
             br(),
             br(),
             fluidRow(class = "text-center", width=12,
                      column(width=4,
                             img(src="School Image_nocircle.png", height = 200)),
                      column(width=4,
                             img(src="School Image_nocircle.png", height = 200)),
                      column(width=4,
                             img(src="School Image_nocircle.png", height = 200)),
             ),
             fluidRow(class = "text-center", width=12,
                      column(width=4, h1("CC Spaulding Elementary")),
                      column(width=4, h1("Eastway Elementary")),
                      column(width=4, h1("E K Powe Elementary"))
             ),
             fluidRow(class = "text-center", width=12,
                      column(width=4, h4("Click below to view info on C.C. Spaulding Elementary.")),
                      column(width=4, h4("Click below to view info on Eastway Elementary.")),
                      column(width=4, h4("Click below to view info on E.K. Powe Elementary."))
             ),
             br(),
             fluidRow(class = "text-center", width=12,
                      column(width=4,
                             actionButton('switchtab', "View C.C. Spaulding Elementary >>")),
                      column(width=4,
                             actionButton("$blank", "View Eastway Elementary >>")),
                      column(width=4,
                             actionButton("$bleep", "View E.K. Powe Elementary >>"))
             ),
             br(),
             br(),
             br(),
             br(),
             fluidRow(class = "text-center", width=12,
                      column(width=4,
                             img(src="School Image_nocircle.png", width=200)),
                      column(width=4,
                             img(src="School Image_nocircle.png", width=200)),
                      column(width=4,
                             img(src="School Image_nocircle.png", width=200))
             ),
             br(),
             fluidRow(class = "text-center", width=12,
                      column(width=4, h1("Fayetteville St Elementary")),
                      column(width=4, h1("Forest View Elementary")),
                      column(width=4, h1("Lakewood Elementary"))
             ),
             fluidRow(class = "text-center", width=12,
                      column(width=4, h4("Click below to view info on Fayetteville Street Elementary.")),
                      column(width=4, h4("Click below to view info on Forest View Elementary")),
                      column(width=4, h4("Click below to view info on Lakewood Elementary."))
             ),
             br(),
             fluidRow(class = "text-center", width=12,
                      column(width=4,
                             actionButton("$bleep", "View Fayetteville Street Elementary >>")),
                      column(width=4,
                             actionButton("$bleep", "View Forest View Elementary >>")),
                      column(width=4,
                             actionButton("$bleep", "View Lakewood Elementary >>"))
             ),
             br(),
             br(),
             br(),
             br(),
             fluidRow(class = "text-center", width=12,
                      column(width=4,
                             img(src="School Image_nocircle.png", width=200)),
                      column(width=4,
                             img(src="School Image_nocircle.png", width=200)),
                      column(width=4,
                             img(src="School Image_nocircle.png", width=200))
             ),
             br(),
             fluidRow(class = "text-center", width=12,
                      column(width=4, h1("Parkwood Elementary")),
                      column(width=4, h1("Southwest Elementary")),
                      column(width=4, h1("Hillside High"))
             ),
             fluidRow(class = "text-center", width=12,
                      column(width=4, h4("Click below to view info on Parkwood Elementary.")),
                      column(width=4, h4("Click below to view info on Southwest Elementary.")),
                      column(width=4, h4("Click below to view info on Hillside High."))
             ),
             br(),
             fluidRow(class = "text-center", width=12,
                      column(width=4,
                             actionButton("$bleep", "View Parkwood Elementary >>")),
                      column(width=4,
                             actionButton("$bleep", "View Southwest Elementary >>")),
                      column(width=4,
                             actionButton("$bleep", "View Hillside High >>"))
             ),
             br(),
             br(),
             br(),
             br(),
             fluidRow(class = "text-center", width=12,
                      column(width=12,
                             img(src="School Image_nocircle.png", width=200))
             ),
             fluidRow(class = "text-center", width=12,
                      column(width=12, h1("Jordan High"))
             ),
             fluidRow(class = "text-center", width=12,
                      column(width=12, h4("Click below to view info on Jordan High."))
             ),
             br(),
             fluidRow(class = "text-center", width=12,
                      column(width=12,
                             actionButton("$bleep", "View Jordan High >>"))
             ),
             br(),
             br()
    )},
    
    #School Pages
      tabItem(tabName = "CCS",
            h2("Insert cc Info")
            ),
      tabItem(tabName = "EastWay",
              h2("Insert Eastway Info")
      ),
      tabItem(tabName = "EKPowe",
              h2("Insert EK Powe Info")
      ),
      tabItem(tabName = "FayettevilleSt",
              h2("Insert Fayetteville St Info")
      ),
      tabItem(tabName = "ForestView",
              h2("Insert Forest View Info")
      ),
      tabItem(tabName = "Lakewood",
              h2("Insert Lakewood Info")
      ),
      tabItem(tabName = "Parkwood",
              h2("Insert Parkwood Info")
      ),
      tabItem(tabName = "Southeast",
              h2("Insert Southeast Info")
      ),
      tabItem(tabName = "Hillside",
              h2("Insert Hillside Info")
      ),
      tabItem(tabName = "Jordan",
              h2("Insert CE Jordan Info")
      ),
      
    #School Stats
    {tabItem(tabName = "statstab",
             fluidRow(
               #Box Plot Outputs
               box(status = "teal",title = strong("Charts"), plotlyOutput("barplots",width="auto",height = "auto")
               ),
               #Drop Down Widget for Box Plots
               box(status = "teal", title = strong("Measurements, Context, and Resources"), box(width = 12,
                                                                                        title = strong("Select a Measurement"),
                                                                                        selectInput("select", em("Click the drop down menu to select which measurement you would like to view."), 
                                                                                                    choices = list("Average Class Size", "ESL Students","Experienced Teacher Ratio",
                                                                                                                   "Free/Red Lunch","Funding Per Pupil", "In-School Suspensions (ISS)",
                                                                                                                   "Median Age","Students Per Device","Student-Teacher Ratio, Elementary School",
                                                                                                                   "Student-Teacher Ratio, High School", "Students With Disabilities"))),
                   box(width = 12,
                       title = strong("Resources"),
                       htmlOutput("resources")
                   )
               ),
             )
    )},
    
    #Map Data
    tabItem(tabName = "mapstab",
            h2("Insert Map Code")
    )
  )
)
}
  
shinyApp(
  ui = dashboardPage(
    freshTheme = custom_colors_theme,
    dashboardHeader(title = "Visualizing DPS"),
    sidebar,
    body
  ),
  server = function(input, output) { 
    output$barplots <- renderPlotly({
      if(input$select == "Median Age") {
        schoolstats <- read.csv("~/Desktop/Visualizing DPS/SchoolStats.csv")
        schoolstats_summary <- schoolstats %>% group_by(SCHOOL_NAME) %>% summarise(MED_AGE)
        p <- ggplot(schoolstats_summary, aes(x=reorder(SCHOOL_NAME, -MED_AGE), y=MED_AGE)) +
          geom_bar(stat = 'identity', fill = "powder blue", color = "white") +
          geom_text(aes(label = MED_AGE), hjust = 1.5, color = "black") +
          geom_hline(aes(text="Durham County Average", yintercept = 35.2), color ='red') +
          coord_flip() +
          theme_minimal() +
          theme(plot.title = element_text(hjust = .5)) +
          labs(title = "Median Age of School Assignment Zones", x = "School", y = "Median Age", caption= "line represents Durham County Avg")
        ggplotly(p, tooltip = c("text", "yintercept"))
      } else if(input$select == "Experienced Teacher Ratio"){
        schoolstats <- read.csv("~/Desktop/Visualizing DPS/SchoolStats.csv")
        schoolstats_summary <- schoolstats %>% group_by(SCHOOL_NAME) %>% summarise(EXP_TEACHER_RATIO) 
        p <- ggplot(schoolstats_summary, aes(x=reorder(SCHOOL_NAME, -EXP_TEACHER_RATIO), y = EXP_TEACHER_RATIO)) +
          geom_bar(stat = 'identity', fill = "powder blue", color = "white") +
          geom_text(aes(label = EXP_TEACHER_RATIO), hjust = 1.5, color = "black") +
          geom_hline(aes(text="Durham County Average", yintercept = .79), color ='red') +
          scale_y_continuous(labels = scales::percent) +
          coord_flip() +
          theme_minimal() +
          labs(title = "Experienced Teacher Ratio", x = "School", y = "Ratio")
        ggplotly(p, tooltip = c("text", "yintercept"))
      } else if(input$select == "Free/Red Lunch"){
        schoolstats <- read.csv("~/Desktop/Visualizing DPS/SchoolStats.csv")
        schoolstats_summary <- schoolstats %>% group_by(SCHOOL_NAME) %>% summarise(FREE_RED_PERCENT)
        p <- ggplot(schoolstats_summary[!is.na(schoolstats_summary$FREE_RED_PERCENT),], aes(x=reorder(SCHOOL_NAME, -FREE_RED_PERCENT), y=FREE_RED_PERCENT)) +
          geom_bar(stat = 'identity', fill = "powder blue", color = "white") +
          geom_text(aes(label = FREE_RED_PERCENT), hjust = 2, color = "black") +
          scale_y_continuous(labels = scales::percent) +
          geom_hline(aes(text="Durham County Average", yintercept = .5165), color ='red') +
          coord_flip() +
          theme_minimal() +
          theme(plot.title = element_text(hjust = .5)) +
          labs(title = "Students Enrolled in Free and Reduced Lunch", x = "School", y = "Number of Students")
        ggplotly(p, tooltip = c("text", "yintercept"))
      } else if(input$select == "Student-Teacher Ratio, Elementary School") {
        schoolstats <- read.csv("~/Desktop/Visualizing DPS/SchoolStats.csv")
        schoolstats_summary <- schoolstats %>% group_by(SCHOOL_NAME) %>% summarise(STUDENT_TEACHER_ELEM)
        p <- ggplot(schoolstats_summary[!is.na(schoolstats_summary$STUDENT_TEACHER_ELEM),], aes(x=reorder(SCHOOL_NAME, -STUDENT_TEACHER_ELEM), y=STUDENT_TEACHER_ELEM)) +
          geom_bar(stat = 'identity', fill = "powder blue", color = "white") +
          geom_text(aes(label = STUDENT_TEACHER_ELEM), hjust = 1.5, color = "black") +
          geom_hline(aes(text="Durham County Average", yintercept = 20.5), color ='red') +
          coord_flip() +
          theme_minimal() +
          theme(plot.title = element_text(hjust = .5)) +
          labs(title = "Elementary School Student-Teacher Ratio", x = "School", y = "Ratio")
        ggplotly(p, tooltip = c("text", "yintercept"))
      } else if(input$select == "Student-Teacher Ratio, High School") {
        schoolstats <- read.csv("~/Desktop/Visualizing DPS/SchoolStats.csv")
        schoolstats_summary <- schoolstats %>% group_by(SCHOOL_NAME) %>% summarise(STUDENT_TEACHER_HS)
        p <- ggplot(schoolstats_summary[!is.na(schoolstats_summary$STUDENT_TEACHER_HS),], aes(x=reorder(SCHOOL_NAME, -STUDENT_TEACHER_HS), y=STUDENT_TEACHER_HS)) +
          geom_bar(stat = 'identity', fill = "powder blue", color = "white") +
          geom_text(aes(label = STUDENT_TEACHER_HS), hjust = 1.5, color = "black") +
          geom_hline(aes(text="Durham County Average", yintercept = 24), color ='red') +
          coord_flip() +
          theme_minimal() +
          theme(plot.title = element_text(hjust = .5)) +
          labs(title = "High School Student-Teacher Ratio", x = "School", y = "Ratio")
        ggplotly(p, tooltip = c("text", "yintercept"))
      } else if(input$select == "Average Class Size") {
        schoolstats <- read.csv("~/Desktop/Visualizing DPS/SchoolStats.csv")
        schoolstats_summary <- schoolstats %>% group_by(SCHOOL_NAME) %>% summarise(AVG_CLASS_SIZE)
        p3 <- ggplot(schoolstats_summary[!is.na(schoolstats_summary$AVG_CLASS_SIZE),], aes(x=reorder(SCHOOL_NAME, -AVG_CLASS_SIZE), y=AVG_CLASS_SIZE)) +
          geom_bar(stat = 'identity', fill = "powder blue", color = "white") +
          geom_text(aes(label = AVG_CLASS_SIZE), hjust = 2, color = "black") +
          geom_hline(aes(text="Durham County Average", yintercept = 19), color ='red') +
          coord_flip() +
          theme_minimal() +
          theme(plot.title = element_text(hjust = .5)) +
          labs(title = "Average Class Size", x = "School", y = "Average # of Students")
        ggplotly(p3, tooltip = c("text", "yintercept"))
      } else if(input$select == "Students Per Device") {
        schoolstats <- read.csv("~/Desktop/Visualizing DPS/SchoolStats.csv")
        schoolstats_summary <- schoolstats %>% group_by(SCHOOL_NAME) %>% summarise(STUDENTS_PER_DEVICE)
        p <- ggplot(schoolstats_summary[!is.na(schoolstats_summary$STUDENTS_PER_DEVICE),], aes(x=reorder(SCHOOL_NAME, -STUDENTS_PER_DEVICE), y=STUDENTS_PER_DEVICE)) +
          geom_bar(stat = 'identity', fill = "powder blue", color = "white") +
          geom_text(aes(label = STUDENTS_PER_DEVICE), hjust = 1.5, color = "black") +
          geom_hline(aes(text="Durham County Average", yintercept = .8), color ='red') +
          scale_y_continuous(labels = scales::percent) +
          coord_flip() +
          theme_minimal() +
          theme(plot.title = element_text(hjust = .5)) +
          labs(title = "Students Per Device", x = "School", y = "Number of Students")
        ggplotly(p, tooltip = c("text", "yintercept"))
      } else if(input$select == "Funding Per Pupil") {
        schoolstats <- read.csv("~/Desktop/Visualizing DPS/SchoolStats.csv")
        schoolstats_summary <- schoolstats %>% group_by(SCHOOL_NAME) %>% summarise(FUNDING_PER_PUPIL)
        p <- ggplot(schoolstats_summary[!is.na(schoolstats_summary$FUNDING_PER_PUPIL),], aes(x=reorder(SCHOOL_NAME, -FUNDING_PER_PUPIL), y=FUNDING_PER_PUPIL)) +
          geom_bar(stat = 'identity', fill = "powder blue", color = "white") +
          geom_text(aes(label = FUNDING_PER_PUPIL), hjust = 1.5, color = "black") +
          geom_hline(aes(text="Durham County Average", yintercept = 11672), color ='red') +
          coord_flip() +
          theme_minimal() +
          labs(title = "Funding Per Pupil", x = "School", y = "Amount of Funding in USD")
        ggplotly(p, tooltip = c("text", "yintercept"))
      } else if(input$select == "Students With Disabilities") {
        schoolstats <- read.csv("~/Desktop/Visualizing DPS/SchoolStats.csv")
        schoolstats_summary <- schoolstats %>% group_by(SCHOOL_NAME) %>% summarise(DISABLED_PERCENT)
        p <- ggplot(schoolstats_summary[!is.na(schoolstats_summary$DISABLED_PERCENT),], aes(x= reorder(SCHOOL_NAME, -DISABLED_PERCENT), y=DISABLED_PERCENT)) +
          geom_bar(stat = 'identity', fill = "powder blue", color = "white") +
          geom_text(aes(label = DISABLED_PERCENT), hjust = 1.5, color = "black") +
          scale_y_continuous(labels = scales::percent) +
          coord_flip() +
          theme_minimal() +
          labs(title = "Percent of Students with Disabilities", x = "School", y = "Percent of Students")
        ggplotly(p, tooltip = c("label"))
      } else if(input$select == "ESL Students") {
        schoolstats <- read.csv("~/Desktop/Visualizing DPS/SchoolStats.csv")
        schoolstats_summary <- schoolstats %>% group_by(SCHOOL_NAME) %>% summarise(ESL_PERCENT)
        p <- ggplot(schoolstats_summary[!is.na(schoolstats_summary$ESL_PERCENT),], aes(x= reorder(SCHOOL_NAME, -ESL_PERCENT), ESL_PERCENT)) +
          geom_bar(stat = 'identity', fill = "powder blue", color = "white") +
          geom_text(aes(label = ESL_PERCENT), hjust = 1.5, color = "black") +
          scale_y_continuous(labels = scales::percent) +
          coord_flip() +
          theme_minimal() +
          labs(title = "Percent of ESL Enrolled Students Per School", x = "School", y = "Percent of Students")
        ggplotly(p, tooltip = c("label"))
      } else if(input$select == "In-School Suspensions (ISS)") {
        schoolstats <- read.csv("~/Desktop/Visualizing DPS/School Statistics.csv", skip = 1)
        schoolstats_summary <- schoolstats %>% group_by(SCHOOL_NAME) %>% summarise(IN_SCHOOL_SUSP_PER_1000)
        p <- ggplot(schoolstats_summary[!is.na(schoolstats_summary$IN_SCHOOL_SUSP_PER_1000),], aes(x=reorder(SCHOOL_NAME, -IN_SCHOOL_SUSP_PER_1000), y=IN_SCHOOL_SUSP_PER_1000)) +
          geom_bar(stat = 'identity', fill = "powder blue", color = "white") +
          geom_text(aes(label = IN_SCHOOL_SUSP_PER_1000), hjust = -.1, color = "black") +
          geom_hline(aes(text="Durham County Average", yintercept = 188.92), color ='red') +
          coord_flip(y=c(0,900)) +
          theme_minimal() +
          labs(title = "In-School Suspensions Per School", x = "School", y = "Students Per 1000")
        ggplotly(p, tooltip = c("text", "yintercept"))
      }
    })
    
    output$resources <- renderText({
      if(input$select == "Median Age") {
        paste("Here are some resouces for Median Age.")
      } else if (input$select == "Experienced Teacher Ratio") {
        paste("Here are some resouces for Experience Teacher Ratio.")
      } else if (input$select == "Free/Red Lunch") {
        paste("Here is context on Free/Reduced Lunch and its connection to Title 1 schools.", "<br>","<br>",
              "Below are articles on Free/Reduced Lunch and its connection to Title 1 schools:", "<br>",
              a("Rural Schools and Free/Reduced Lunch", 
                href = "https://www.nea.org/advocating-for-change/new-from-nea/whos-looking-out-rural-schools"), "<br>",
              a("NC Community Free/Reduced Lunch Eligibility",
                href = "https://www.dpi.nc.gov/districts-schools/federal-program-monitoring/title-i-part/community-eligibility-free-and-reduced-price-meals"))
      } else if (input$select == "Student Teacher Ratio Elementary School"){
        paste("Here are some resouces for Student-Teacher Ratio for Elementary Schools.")
      } else if (input$select == "Student Teacher Ratio High School"){
        paste("Here are some resouces for Student-Teacher Ratio in High Schools.")
      } else if (input$select == "Average Class Size"){
        paste("Here are some resouces for Average Class Sizes.")
      } else if (input$select == "Students Per Device"){
        paste("Here are some resouces for educational devices.")
      } else if (input$select == "Funding Per Pupil"){
        paste("Here are some resouces on school funding.")
      } else if (input$select == "Students With Disabilities"){
        paste("Here are some resouces on students with disabilities.")
      } else if (input$select == "ESL Students"){
        paste("Here are some resouces on ESL students and programs.")
      } else if (input$select == "In-School Suspensions (ISS)"){
        paste("Students of color are more susceptible to harsher punishments in schools.
             Black students are subject to higher disciplinary actions compared to their white peers.
             A reason for this is racial bias leading to the overpolicing of Black students, fueling the school-to-prison pipeline.", "<br>","<br>",
              "Below are articles on In-School Suspensions and the School-to-Prison Pipeline:", "<br>", 
              a("Racial Bias in School Discipline", 
                href = "https://www.pnas.org/content/116/17/8255"), "<br>",
              a("School-to-Prison Pipeline", 
                href = "https://www.nea.org/advocating-for-change/new-from-nea/school-prison-pipeline-time-shut-it-down"))
      }
      
    })
    
    
  }
)
